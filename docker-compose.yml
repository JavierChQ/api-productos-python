services:
  # Base de datos MySQL
  db:
    image: mysql:8.0
    container_name: api_productos_mysql
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
    ports:
      - "3307:3306"
    volumes:
      - mysql_data:/var/lib/mysql
      - ./mysql-init:/docker-entrypoint-initdb.d
    command: --default-authentication-plugin=mysql_native_password
    networks:
      - api_network

  # Aplicación Django
  web:
    build: .
    container_name: api_productos_django
    restart: unless-stopped
    ports:
      - "8000:8000"
    environment:
      - DEBUG=${DEBUG}
      - SECRET_KEY=${SECRET_KEY}
      - DB_HOST=${DB_HOST}
      - DB_PORT=${DB_PORT}
      - DB_NAME=${DB_NAME}
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_CHARSET=${DB_CHARSET}
      - DB_COLLATION=${DB_COLLATION}
      - ALLOWED_HOSTS=${ALLOWED_HOSTS}
    volumes:
      - .:/app
    depends_on:
      - db
    networks:
      - api_network
    command: >
      sh -c "python manage.py migrate &&
             python manage.py collectstatic --noinput &&
             python manage.py runserver 0.0.0.0:8000"

  # phpMyAdmin para gestión de base de datos (opcional)
  # phpmyadmin:
  #   image: phpmyadmin/phpmyadmin
  #   container_name: api_productos_phpmyadmin
  #   restart: unless-stopped
  #   environment:
  #     PMA_HOST: db
  #     PMA_PORT: 3306
  #     PMA_USER: api_user
  #     PMA_PASSWORD: api_password
  #   ports:
  #     - "8080:80"
  #   depends_on:
  #     - db
  #   networks:
  #     - api_network

volumes:
  mysql_data:

networks:
  api_network:
    driver: bridge
